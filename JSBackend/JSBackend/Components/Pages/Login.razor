@page "/signin"



@using Infrastructure.Entites
@using Infrastructure.Models
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity

@inject SignInManager<UserEntity> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager

<PageTitle>Sign In</PageTitle>

<section id="signin">

    <div class="container">
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert-2">
                @ErrorMessage
            </div>
        }

        <EditForm Model="Form" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="LoginUser" FormName="signin" novalidate>
            <DataAnnotationsValidator />

            <h1>Welcome Back</h1>
            <p>Don’t have an account yet? <a href="/signup">Sign up here.</a></p>

            <div class="content">

                <div id="form-email" class="input-group">
                    <label for="Email">Email Address</label>
                    <ValidationMessage For="() => Form.Email" />
                    <InputText @bind-Value="Form.Email" autocomplete="email" aria-required="true" placeholder="Enter your Email address" />
                </div>
                <div id="form-password" class="input-group">
                    <label for="Password">Password</label>
                    <ValidationMessage For="() => Form.Password" />
                    <InputText @bind-Value="Form.Password" type="password" autocomplete="password" aria-required="true" placeholder="Enter your Password" />
                </div>
                <div id="form-remember" class="checkbox">
                    <div class="checkbox-group">
                        <InputCheckbox @bind-Value="Form.RememberMe" autocomplete="RememberMe" aria-required="true" />
                        <label for="RememberMe">Remember Me</label>
                    </div>
                </div>

                <button id="form-button" class="btn-theme-s" type="submit"><i class="fa-regular fa-arrow-right-to-bracket"></i>Sign In</button>
                <a id="form-forgot-password" href="/forgot">Forgot your password?</a>
            </div>
        </EditForm>

    </div>

</section>
@code {
    private string? ErrorMessage { get; set; }

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;


    [SupplyParameterFromForm]
    private SignInModel Form { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {

            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    public async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Form.Email, Form.Password, Form.RememberMe, lockoutOnFailure: false);
        if (result.Succeeded)
        {
            NavigationManager.NavigateTo(ReturnUrl ?? "/");
        }

        else
        {
            ErrorMessage = "Incorrect email or password.";
        }
    }
}
